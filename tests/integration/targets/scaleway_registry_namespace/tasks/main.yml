---
- block:
    - name: Ensure required keys are provided
      ansible.builtin.fail:
        msg: "{{ item }} should be defined in you env"
      when: item is not defined or item | length == 0
      loop:
        - scw_access_key
        - scw_secret_key
        - scw_default_project_id

    - name: Create registry_namespace
      scaleway.scaleway.scaleway_registry_namespace:
        name: "{{ resource_name }}"
        region: "{{ resource_region }}"
        project_id: "{{ lookup('env', 'SCW_DEFAULT_PROJECT_ID') }}"
        access_key: "{{ lookup('env', 'SCW_ACCESS_KEY') }}"
        secret_key: "{{ lookup('env', 'SCW_SECRET_KEY') }}"
        state: present
        description: "{{ resource_description }}"
        is_public: "{{ resource_is_public }}"
      register: integration_registry_namespace_creation

    - name: Delete registry_namespace
      scaleway.scaleway.scaleway_registry_namespace:
        name: "{{ resource_name }}"
        region: "{{ resource_region }}"
        project_id: "{{ lookup('env', 'SCW_DEFAULT_PROJECT_ID') }}"
        access_key: "{{ lookup('env', 'SCW_ACCESS_KEY') }}"
        secret_key: "{{ lookup('env', 'SCW_SECRET_KEY') }}"
        state: absent
        description: "{{ resource_description }}"
        is_public: "{{ resource_is_public }}"
      register: integration_registry_namespace_deletion

    - name: Create a registry_namespace (Check)
      check_mode: yes
      scaleway.scaleway.scaleway_registry_namespace:
        name: "{{ resource_name }}"
        region: "{{ resource_region }}"
        project_id: "{{ lookup('env', 'SCW_DEFAULT_PROJECT_ID') }}"
        access_key: "{{ lookup('env', 'SCW_ACCESS_KEY') }}"
        secret_key: "{{ lookup('env', 'SCW_SECRET_KEY') }}"
        state: present
        description: "{{ resource_description }}"
        is_public: "{{ resource_is_public }}"
      register: integration_registry_namespace_creation_check

