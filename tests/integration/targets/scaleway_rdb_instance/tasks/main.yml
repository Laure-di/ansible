---
- block:
  - name: Ensure Access Key is provided
    ansible.builtin.fail:
      msg: scw_access_key should be defined in tests/integration/integration_config.yml
    when:
      - scw_access_key is not defined
      - scw_access_key | length == 0

  - name: Ensure Secret Key is provided
    ansible.builtin.fail:
      msg: scw_secret_key should be defined in tests/integration/integration_config.yml
    when:
      - scw_secret_key is not defined
      - scw_secret_key | length == 0

  - name: Create rdb_instance
    quantumsheep.scaleway.scaleway_rdb_instance:
      access_key: "{{ scw_access_key }}"
      secret_key: "{{ scw_secret_key }}"
      state: present
      engine: "{{ resource_engine }}"
      user_name: "{{ resource_user_name }}"
      password: "{{ resource_password }}"
      node_type: "{{ resource_node_type }}"
      is_ha_cluster: "{{ resource_is_ha_cluster }}"
      disable_backup: "{{ resource_disable_backup }}"
      volume_type: "{{ resource_volume_type }}"
      volume_size: "{{ resource_volume_size }}"
      backup_same_region: "{{ resource_backup_same_region }}"
    register: integration_rdb_instance_creation

  - name: Create a rdb_instance (Check)
    check_mode: yes
    quantumsheep.scaleway.scaleway_rdb_instance:
      access_key: "{{ scw_access_key }}"
      secret_key: "{{ scw_secret_key }}"
      state: present
      engine: "{{ resource_engine }}"
      user_name: "{{ resource_user_name }}"
      password: "{{ resource_password }}"
      node_type: "{{ resource_node_type }}"
      is_ha_cluster: "{{ resource_is_ha_cluster }}"
      disable_backup: "{{ resource_disable_backup }}"
      volume_type: "{{ resource_volume_type }}"
      volume_size: "{{ resource_volume_size }}"
      backup_same_region: "{{ resource_backup_same_region }}"
    register: integration_rdb_instance_creation_check
